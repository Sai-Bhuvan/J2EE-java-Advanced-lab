package is001;
import java.util.HashMap;
import java.util.List;
import java.util.ArrayList;
import java.util.Scanner;

class Detail
{
  String name;
  long number;

    Detail (String name, long number)
  {
    this.name = name;
    this.number = number;
  }

  public String toString ()
  {
    return this.name + " : " + this.number;
  }
}

public class Contact
{

  public static ArrayList < Long > getmissedCalls ()
  {
    ArrayList < Long > a = new ArrayList <> ();
    Scanner in = new Scanner (System.in);
      System.out.println ("enter no of missed calls");
    int n = in.nextInt ();

      System.out.println ("enter the missed calls");
    for (int i = 0; i < n; i++)
      {
	long s = in.nextLong ();
	  a.add (s);
      }

    return a;
  }

  public static ArrayList < Detail > deletemissedcall (ArrayList < Detail >
						       arr, long no)
  {
    Detail d = null;
    int flag = 0;
  for (Detail i:arr)
      {
	if (i.number == no)
	  {
	    d = i;
	    flag = 1;
	    break;
	  }
      }
    if (flag == 1)
      {
	arr.remove (d);
      }
    return arr;
  }

  public static ArrayList < Detail > missedcallsDetail (HashMap < Detail, List < Detail >> map, ArrayList < Long >arr, long no, String name)
  {
List < Detail > l = map.get (new Detail (name, no));
    ArrayList < Detail > d = new ArrayList <> ();

  for (Detail i:l)
      {
	if (arr.contains (i.number))
	  {
	    System.out.println (i.toString ());
	    d.add (i);
	  }
	else
	  {
	    System.out.println ("private caller");
	  }
      }

    return d;

  }

  public static void main (String args[])
  {
    HashMap < Detail, List < Detail >> map = new HashMap <> ();
    Scanner in = new Scanner (System.in);
    System.out.println ("enter Detail(name,number) of owner");
    String ownname = in.next ();
    long num = in.nextLong ();
    Detail d = new Detail (ownname, num);

    System.out.println ("enter no of contacts");
    int n = in.nextInt ();

    List < Detail > l = new ArrayList <> ();

    for (int i = 0; i < n; i++)
      {
	String name = in.next ();
	long no = in.nextLong ();
	Detail o = new Detail (ownname, num);

	l.add (o);
      }

    map.put (d, l);
    ArrayList < Long > a = getmissedCalls ();
    ArrayList < Detail > missedcalls = missedcallsDetail (map, a, 1234567890, "ramesh");
    missedcalls = deletemissedcall (missedcalls, 123456781);
  }
}
