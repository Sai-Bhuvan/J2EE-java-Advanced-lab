import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.util.*;

class Customer {
    String customerId;
    String mobileNumber;

    Customer(String customerId, String mobileNumber) {
        this.customerId = customerId;
        this.mobileNumber = mobileNumber;
    }
}

class Item {
    String itemId;
    String itemName;
    double itemPrice;

    Item(String itemId, String itemName, double itemPrice) {
        this.itemId = itemId;
        this.itemName = itemName;
        this.itemPrice = itemPrice;
    }
}

public class CustomerDetails extends JFrame implements ActionListener {
    Map<String, Customer> customerDetails = new HashMap<>();
    Map<String, Item> itemDetails = new HashMap<>();
    JTextField mobileNumberField, itemIdField, quantityField, discountField;

    public CustomerDetails() {
    	Item i1 = new Item("10", "pencil", 10);
    	Item i2 = new Item("10", "pen", 10);
    	Item i3 = new Item("10", "eraser", 10);
    	
    	itemDetails.put(i1.itemId, i1);
    	itemDetails.put(i2.itemId, i2);
    	itemDetails.put(i3.itemId, i3);
    	
        setTitle("Customer Details");
        setLayout(new GridLayout(5, 2, 10, 10));

        JLabel mobileLabel = new JLabel("Enter Mobile Number:");
        mobileNumberField = new JTextField();

        JLabel itemLabel = new JLabel("Enter Item ID:");
        itemIdField = new JTextField();

        JLabel quantityLabel = new JLabel("Enter Quantity:");
        quantityField = new JTextField();

        JLabel discountLabel = new JLabel("Enter Discount:");
        discountField = new JTextField();

        JButton checkButton = new JButton("Check Customer");
        checkButton.addActionListener(this);

        JButton purchaseButton = new JButton("Purchase Item");
        purchaseButton.addActionListener(this);

        add(mobileLabel);
        add(mobileNumberField);
        add(itemLabel);
        add(itemIdField);
        add(quantityLabel);
        add(quantityField);
        add(discountLabel);
        add(discountField);
        add(checkButton);
        add(purchaseButton);

        setSize(400, 250);
        setVisible(true);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getActionCommand().equals("Check Customer")) {
            String mobileNumber = mobileNumberField.getText();
            if (customerDetails.containsKey(mobileNumber)) {
                Customer customer = customerDetails.get(mobileNumber);
                JOptionPane.showMessageDialog(this, "Customer ID: " + customer.customerId);
            } else {
                String customerId = "C" + (customerDetails.size() + 1);
                Customer newCustomer = new Customer(customerId, mobileNumber);
                customerDetails.put(mobileNumber, newCustomer);
                JOptionPane.showMessageDialog(this, "New customer added. Customer ID: " + customerId);
            }
        } else if (e.getActionCommand().equals("Purchase Item")) {
            String itemId = itemIdField.getText();
            int quantity = Integer.parseInt(quantityField.getText());
            double discount = Double.parseDouble(discountField.getText());

            if (itemDetails.containsKey(itemId)) {
                Item item = itemDetails.get(itemId);
                double totalCost = item.itemPrice * quantity;
                totalCost -= (totalCost * (discount / 100)); // Applying discount
                JOptionPane.showMessageDialog(this, "Item Name: " + item.itemName + "\nTotal Cost: $" + totalCost);
            } else {
                JOptionPane.showMessageDialog(this, "Item ID not found!");
            }
        }
    }

    public static void main(String[] args) {
        new CustomerDetails();
    }
}
